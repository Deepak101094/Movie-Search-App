[{"/home/deepak/Desktop/project/movies-search-app/src/index.js":"1","/home/deepak/Desktop/project/movies-search-app/src/reportWebVitals.js":"2","/home/deepak/Desktop/project/movies-search-app/src/App.js":"3","/home/deepak/Desktop/project/movies-search-app/src/components/MovieSearch.js":"4","/home/deepak/Desktop/project/movies-search-app/src/components/Resources.js":"5"},{"size":500,"mtime":1610342888831,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1610342888835,"results":"8","hashOfConfig":"7"},{"size":252,"mtime":1610638234871,"results":"9","hashOfConfig":"7"},{"size":3499,"mtime":1610960438346,"results":"10","hashOfConfig":"7"},{"size":1175,"mtime":1610958761413,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"6ercrr",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/home/deepak/Desktop/project/movies-search-app/src/index.js",[],["24","25"],"/home/deepak/Desktop/project/movies-search-app/src/reportWebVitals.js",[],"/home/deepak/Desktop/project/movies-search-app/src/App.js",[],"/home/deepak/Desktop/project/movies-search-app/src/components/MovieSearch.js",["26"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Resources from \"./Resources\";\n\nfunction MovieSearch() {\n  const [searchText, setSearchText] = useState(\"\");\n  const [searchMethod, setSearchMethod] = useState(\"\");\n  const [resources, setResources] = useState({});\n  const [error, setError] = useState(\"\");\n  const [inputError, setInputError] = useState(\"\");\n  const [showCard, setShowCard] = useState(false);\n  const [loader, setLoader] = useState(false);\n\n  const validate = () => {\n    let method = searchMethod;\n    let text = searchText;\n    let isValid = true;\n    let errors = \"\";\n    if (!method) {\n      isValid = false;\n      errors = \"pls select any searchMethod\";\n    }\n    if (!text) {\n      isValid = false;\n      errors = \"pls search your fav movie\";\n    }\n    setInputError(errors);\n    return isValid;\n  };\n\n  const clickHandler = (text) => {\n    setLoader(true);\n    const token = \"114529ed\";\n    const key = searchMethod;\n    if (validate()) {\n      if (key == \"i\") {\n        axios\n          .get(\"http://www.omdbapi.com\", {\n            params: {\n              apikey: token,\n              i: text,\n            },\n          })\n          .then((res) => {\n            // console.log(res);\n            setResources(res.data);\n            if(res.data.Error) {\n              setError(\"movie not fonnd...!\");\n              console.log(error);\n            }\n          });\n      } else {\n        axios\n          .get(\"http://www.omdbapi.com\", {\n            params: {\n              apikey: token,\n              t: text,\n            },\n          })\n          .then((res) => {\n            setResources(res.data);\n            if(res.data.Error) {\n              setError(\"movie not fonnd...!\");\n              console.log(error);\n            }\n          });\n      }\n    } else {\n      alert(\"something went wrong!\");\n    }\n\n    setLoader(false);\n    setShowCard(true);\n    setSearchText(\"\");\n  };\n\n// when user click on enter button then this function will call..!\n\nconst handleEnterClick = (event) => {\n if(event.keyCode === 13) {\n   event.preventDefault();\n   //event.stopPropagation();\n   clickHandler();\n }\n}\n\n  return (\n    <div className=\"root\">\n      <div className=\"label\">\n        <input\n          type=\"radio\"\n          name=\"movie\"\n          value=\"i\"\n          onChange={(e) => setSearchMethod(e.target.value)}\n        />\n        <label>Search By Id</label>\n\n        <input\n          type=\"radio\"\n          name=\"movie\"\n          value=\"t\"\n          onChange={(e) => setSearchMethod(e.target.value)}\n        />\n        <label>Search By Title </label>\n\n        <p style={{ color: \"red\" }}> {inputError} </p>\n      </div>\n\n      <input\n        className=\"input\"\n        type=\"text\"\n        name=\"movieName\"\n        placeholder=\"i.e. Jurassic Park\"\n        value={searchText}\n        onKeyDown={(e) =>handleEnterClick(e)}\n        onChange={(e) => setSearchText(e.target.value)}\n      />\n      <p style={{ color: \"red\" }}> {inputError} </p>\n\n      {loader ? (\n        <div className=\"loader\">Loading...</div>\n      ) : (\n        <button className=\"button\" onClick={() => clickHandler(searchText)}>\n          Search\n        </button>\n      )}\n\n      {loader ? (\n        <div className=\"loader\">Loading...</div>\n      ) : (\n        <>\n          {showCard ? (\n            <Resources resources={resources} error={error} />\n          ) : (\n            <h2>Search Your fav movie...</h2>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default MovieSearch;\n","/home/deepak/Desktop/project/movies-search-app/src/components/Resources.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":36,"column":15,"nodeType":"33","messageId":"34","endLine":36,"endColumn":17},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]